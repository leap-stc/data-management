name: Create a report on bucket sizes in gcs

on:
  workflow_dispatch:
    inputs:
      bucket_prefix:
        description: "optional single bucket to check. ex: leap-persistent/data-library"
        required: false
env:
  RCLONE_CONFIG_GCS_TYPE: google cloud storage

jobs:
  size-report:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v5

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ secrets.LEAP_BAKERY_SERVICE_ACCOUNT }}"

      - name: Setup Rclone
        uses: AnimMouse/setup-rclone@v1
        with:
          rclone_config: |
            [gcs]
            type = google cloud storage
          disable_base64: true

      - name: Generate bucket size report
        id: report
        run: |
          #!/bin/bash
          set -x
          set -euo pipefail

          input_prefix="${{ github.event.inputs.bucket_prefix || '' }}"

          if [[ -n "$input_prefix" ]]; then
            bucket_prefixes=("$input_prefix")
            echo "$bucket_prefixes"
          else
            bucket_prefixes=(
              leap-persistent
              leap-persistent-ro
              leap-persistent/data-library
            )
          fi

          echo "${bucket_prefixes[@]}"
          REPORT="*Bucket Size Report:*\n\n| Bucket/Prefix | Size (GB) |\n|--------------|-----------|"

          for prefix in "${bucket_prefixes[@]}"; do
            echo "gcs:$prefix"
            REPORT="*Bucket Size Report:*\n\n| Bucket/Prefix | Size |\n|---------------|------|"

            dirs=$(rclone lsd "gcs:$prefix" --max-depth 1 | awk '{print $NF}' || true)

            for dir in $dirs; do

              if [[ -z "$dir" || "$dir" == "." ]]; then
                continue
              fi

              echo "gcs:$prefix/$dir"

              size_json=$(rclone size "gcs:$prefix/$dir" --fast-list --json)
              bytes=$(echo "$size_json" | jq '.bytes')
              echo "Raw bytes: $bytes"
              human_size=$(numfmt --to=iec --suffix=B "$bytes")

              REPORT+="\n| $prefix/$dir | $human_size |"

            done
          done

          echo "report<<EOF" >> $GITHUB_OUTPUT
          echo -e "$REPORT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT


      - name: print report output
        run: echo "${{ steps.report.outputs.report }}"

      # - name: post report to slack
      #   uses: slackapi/slack-github-action@v2.1.1
      #   with:
      #     webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
      #     webhook-type: incoming-webhook
      #     payload: |
      #       text: |
      #         *Bucket Size Report:*

      #         ${{ steps.report.outputs.report }}